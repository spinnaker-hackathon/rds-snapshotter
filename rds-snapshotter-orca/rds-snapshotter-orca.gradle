buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://dl.bintray.com/spinnaker/spinnaker/" }
}

spinnakerPlugin {
    serviceName = "orca"
    pluginClass = "oss.plugin.stage.snapshotter.rds.RdsSnapshotterPlugin"
}

dependencies {
    compileOnly(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}") {
        exclude group: "org.slf4j"
    }
    kapt(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}")
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.1.RELEASE'
    compileOnly(group: 'com.netflix.spinnaker.kork', name: 'kork-plugins-api', version: "${korkVersion}")
    implementation(group: 'com.netflix.spinnaker.orca', name: 'orca-api', version: "${orcaVersion}") {
        exclude group: "org.slf4j"
    }
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'

    implementation platform('software.amazon.awssdk:bom:2.5.29')
    implementation 'software.amazon.awssdk:rds'
    implementation 'software.amazon.awssdk:sts'

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testImplementation group: 'io.strikt', name: 'strikt-core', version: '0.22.1'
    testImplementation group: 'dev.minutest', name: 'minutest', version: '1.10.0'

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testRuntime "org.junit.platform:junit-platform-launcher:1.3.2"
}

tasks.withType(Test) {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
